version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: ekyc_db
      POSTGRES_USER: ekyc_user
      POSTGRES_PASSWORD: ekyc_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ekyc_network

  # Redis for Celery
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ekyc_network

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - ekyc_network

  # EKYC FastAPI Application
  ekyc_api:
    build: .
    environment:
      DATABASE_URL: "postgresql://ekyc_user:ekyc_password@postgres:5432/ekyc_db"
      REDIS_URL: "redis://redis:6379/0"
      CELERY_BROKER_URL: "redis://redis:6379/0"
      CELERY_RESULT_BACKEND: "redis://redis:6379/0"
      MINIO_ENDPOINT: "minio:9000"
      MINIO_ACCESS_KEY: "minioadmin"
      MINIO_SECRET_KEY: "minioadmin"
      MINIO_SECURE: "false"
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
      - minio
    volumes:
      - ./models:/app/models  # AI models directory
    networks:
      - ekyc_network

  # Celery Worker
  celery_worker:
    build: .
    command: celery -A app.tasks.celery_app worker --loglevel=info
    environment:
      DATABASE_URL: "postgresql://ekyc_user:ekyc_password@postgres:5432/ekyc_db"
      REDIS_URL: "redis://redis:6379/0"
      CELERY_BROKER_URL: "redis://redis:6379/0"
      CELERY_RESULT_BACKEND: "redis://redis:6379/0"
      MINIO_ENDPOINT: "minio:9000"
      MINIO_ACCESS_KEY: "minioadmin"
      MINIO_SECRET_KEY: "minioadmin"
      MINIO_SECURE: "false"
    depends_on:
      - postgres
      - redis
      - minio
    volumes:
      - ./models:/app/models  # AI models directory
    networks:
      - ekyc_network

  # Celery Flower (Task Monitor)
  flower:
    build: .
    command: celery -A app.tasks.celery_app flower --port=5555
    environment:
      CELERY_BROKER_URL: "redis://redis:6379/0"
      CELERY_RESULT_BACKEND: "redis://redis:6379/0"
    ports:
      - "5555:5555"
    depends_on:
      - redis
    networks:
      - ekyc_network

volumes:
  postgres_data:
  redis_data:
  minio_data:

networks:
  ekyc_network:
    driver: bridge
