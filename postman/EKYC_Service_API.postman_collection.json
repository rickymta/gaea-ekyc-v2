{
  "info": {
    "name": "EKYC Service API",
    "description": "Postman collection cho EKYC Service API - D·ªãch v·ª• x√°c minh danh t√≠nh ƒëi·ªán t·ª≠",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{access_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8000",
      "type": "string"
    },
    {
      "key": "access_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "session_id",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "üè• Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/health",
          "host": ["{{base_url}}"],
          "path": ["health"]
        },
        "description": "Ki·ªÉm tra tr·∫°ng th√°i service"
      },
      "response": []
    },
    {
      "name": "üîê Authentication",
      "item": [
        {
          "name": "Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// L∆∞u access token v√†o bi·∫øn m√¥i tr∆∞·ªùng",
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('access_token', response.access_token);",
                  "    console.log('Access token saved:', response.access_token);",
                  "} else {",
                  "    console.log('Login failed');",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              }
            ],
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "user_id",
                  "value": "testuser",
                  "description": "User ID m·∫∑c ƒë·ªãnh"
                },
                {
                  "key": "password",
                  "value": "testpassword",
                  "description": "M·∫≠t kh·∫©u m·∫∑c ƒë·ªãnh"
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/api/v1/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "login"]
            },
            "description": "ƒêƒÉng nh·∫≠p v√† nh·∫≠n JWT token\n\n**Th√¥ng tin m·∫∑c ƒë·ªãnh:**\n- Username: testuser\n- Password: testpassword"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "user_id",
                      "value": "testuser"
                    },
                    {
                      "key": "password",
                      "value": "testpassword"
                    }
                  ]
                },
                "url": {
                  "raw": "{{base_url}}/api/v1/auth/login",
                  "host": ["{{base_url}}"],
                  "path": ["api", "v1", "auth", "login"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"access_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n    \"token_type\": \"bearer\"\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "üìã EKYC Sessions",
      "item": [
        {
          "name": "Create Session",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// L∆∞u session_id v√†o bi·∫øn m√¥i tr∆∞·ªùng",
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('session_id', response.id);",
                  "    console.log('Session ID saved:', response.id);",
                  "} else {",
                  "    console.log('Create session failed');",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"user_id\": \"testuser\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/ekyc/sessions",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "ekyc", "sessions"]
            },
            "description": "T·∫°o session EKYC m·ªõi cho user"
          },
          "response": []
        },
        {
          "name": "Get Session Details",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/ekyc/sessions/{{session_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "ekyc", "sessions", "{{session_id}}"]
            },
            "description": "L·∫•y chi ti·∫øt session v√† k·∫øt qu·∫£ x√°c minh"
          },
          "response": []
        },
        {
          "name": "List Sessions",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/ekyc/sessions?page=1&page_size=10",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "ekyc", "sessions"],
              "query": [
                {
                  "key": "page",
                  "value": "1",
                  "description": "Trang hi·ªán t·∫°i"
                },
                {
                  "key": "page_size",
                  "value": "10",
                  "description": "S·ªë l∆∞·ª£ng sessions m·ªói trang"
                },
                {
                  "key": "status_filter",
                  "value": "",
                  "description": "L·ªçc theo status (pending/in_progress/completed/failed)",
                  "disabled": true
                }
              ]
            },
            "description": "Danh s√°ch sessions c·ªßa user hi·ªán t·∫°i"
          },
          "response": []
        }
      ]
    },
    {
      "name": "üìé File Upload",
      "item": [
        {
          "name": "Upload ID Document (Front Only)",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "front_image",
                  "type": "file",
                  "src": [],
                  "description": "·∫¢nh m·∫∑t tr∆∞·ªõc CMND/CCCD (JPG/PNG, max 10MB)"
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/api/v1/ekyc/sessions/{{session_id}}/id-document",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "ekyc", "sessions", "{{session_id}}", "id-document"]
            },
            "description": "Upload ·∫£nh m·∫∑t tr∆∞·ªõc CMND/CCCD\n\n**Y√™u c·∫ßu:**\n- Format: JPG, JPEG, PNG\n- Dung l∆∞·ª£ng: T·ªëi ƒëa 10MB\n- Ch·∫•t l∆∞·ª£ng t·ªët, kh√¥ng b·ªã m·ªù"
          },
          "response": []
        },
        {
          "name": "Upload ID Document (Front + Back)",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "front_image",
                  "type": "file",
                  "src": [],
                  "description": "·∫¢nh m·∫∑t tr∆∞·ªõc CMND/CCCD"
                },
                {
                  "key": "back_image",
                  "type": "file",
                  "src": [],
                  "description": "·∫¢nh m·∫∑t sau CMND/CCCD"
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/api/v1/ekyc/sessions/{{session_id}}/id-document",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "ekyc", "sessions", "{{session_id}}", "id-document"]
            },
            "description": "Upload ·∫£nh c·∫£ hai m·∫∑t CMND/CCCD"
          },
          "response": []
        },
        {
          "name": "Upload Selfie",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "selfie_image",
                  "type": "file",
                  "src": [],
                  "description": "·∫¢nh selfie (JPG/PNG, max 10MB)"
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/api/v1/ekyc/sessions/{{session_id}}/selfie",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "ekyc", "sessions", "{{session_id}}", "selfie"]
            },
            "description": "Upload ·∫£nh selfie ƒë·ªÉ x√°c minh\n\n**L∆∞u √Ω:**\n- Ph·∫£i upload CMND tr∆∞·ªõc\n- ·∫¢nh r√µ m·∫∑t, √°nh s√°ng t·ªët\n- Kh√¥ng ƒëeo kh·∫©u trang, k√≠nh ƒëen"
          },
          "response": []
        }
      ]
    },
    {
      "name": "üìä Monitoring",
      "item": [
        {
          "name": "Get Task Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/tasks/{{task_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "tasks", "{{task_id}}"],
              "variable": [
                {
                  "key": "task_id",
                  "value": "",
                  "description": "ID c·ªßa Celery task"
                }
              ]
            },
            "description": "Ki·ªÉm tra tr·∫°ng th√°i x·ª≠ l√Ω c·ªßa background task"
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global pre-request script",
          "console.log('Making request to:', pm.request.url.toString());"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global test script",
          "console.log('Response status:', pm.response.status);",
          "console.log('Response time:', pm.response.responseTime + 'ms');"
        ]
      }
    }
  ]
}
